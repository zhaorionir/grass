#include <stdio.h>
void print(int n)
	{
		if(n==0)
		{ 
		return ;
		} 
		print (n-1);
	printf("%d\n",n);
	}
int main()
{
	int n;
	scanf("%d",&n);
    print(n); 
	
}
/*
递归的更多使用场合
    1.二叉树的定义和遍历
    2.遍历图
    3.某些查找算法，比如折半查找、二叉查找树
    4.某些排序算法，比如归并和快速排序

    5.复制/删除文件夹（包括子文件夹），而不是复制/删除文件；dir /s 而不是 dir    
    6.字符全排列、字符回文、汉诺塔
    7.动态生成树形结构的菜单来实现数据的管理；或者是需要动态生成树形的图表结构。这些树形结构往往没有层级限*/
