#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<string>
#include<sstream>
#include<set>
#include<cstdlib>
#include<map>
#include<queue>
#include<fstream>
#include<array>
#include<vector>
using namespace std;
const int MAXN=500007;
int n,tree[MAXN];
void push_up(int i){
    tree[i]=tree[i*2]+tree[i*2+1];
}
void build(int l,int r,int i){
    if(l==r){
        scanf("%d",&tree[i]);
        return ;
    }
    int mid=(int)((l+r)>>1);
    build(l,mid,i*2);
    build(mid+1,r,i*2+1);
    push_up(i);
}
void update(int l,int r,int t,int val,int i){
    if(l==r&&r==t){
        tree[i]+=val;
        return ;
    }
    int mid=(l+r)>>1;
    if(t<=mid){
        update(l,mid,t,val,i*2);
    }else{
        update(mid+1,r,t,val,i*2+1);
    }
    push_up(i);
}
int query(int l,int r,int a,int b,int i){
    if(l==a&&r==b){
        return tree[i];
    }
    int mid=(l+r)>>1;
    if(mid>=b){
        return query(l,mid,a,b,i*2);
    }else if(mid<a){
        return query(mid+1,r,a,b,i*2+1);
    }else{
        return query(l,mid,a,mid,i*2)+query(mid+1,r,mid+1,b,i*2+1);
    }
}
int main(){
    int t,x,y,k=1;
    cin>>t;
    while(t--){
        cin>>n;
        build(1,n,1);
        string str;
         cout<<"Case "<<k++<<":"<<endl;
         while(cin>>str&&str!="End"){
            scanf("%d%d",&x,&y);
            if(str=="Query"){
                printf("%d\n",query(1,n,x,y,1));
            }else if(str=="Add"){
                update(1,n,x,y,1);
            }else{
                update(1,n,x,-y,1);
            }
         }
    }
    return 0;
}
